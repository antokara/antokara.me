@import 'Variables.pcss';

:root {
  --paneWidth: 100vw;
  --bgModifier1: 6;
  --bgModifier2: 3;

  @media (min-width: 500px) {
    --bgModifier1: 30;
    --bgModifier2: 10;
  }

  @media (max-width: 499px) {
    --bgModifier1: 6;
    --bgModifier2: 3;
  }
}

.routes {
  &[data-active-index="1"] {
    .panes {
      transform: translateX(-var(--paneWidth));
    }

    .bg g {
      &:first-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier1) * -1));
      }

      &:last-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier2) * -1));
      }
    }
  }

  &[data-active-index="2"] {
    .panes {
      transform: translateX(calc(var(--paneWidth) * -2));
    }

    .bg g {
      &:first-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier1) * -2));
      }

      &:last-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier2) * -2));
      }
    }
  }

  &[data-active-index="3"] {
    .panes {
      transform: translateX(calc(var(--paneWidth) * -3));
    }

    .bg g {
      &:first-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier1) * -3));
      }

      &:last-of-type {
        transform: translateX(calc(var(--paneWidth) / var(--bgModifier2) * -3));
      }
    }
  }
}

.viewport {
  position: relative;
  width: var(--paneWidth);
  overflow-x: visible;
  z-index: 1;
}

.panes {
  position: relative;
  display: flex;
  flex-wrap: nowrap;
  width: calc(var(--paneWidth) * 4);
  transition: transform 0.3s;

  > div {
    box-sizing: border-box;
    width: var(--paneWidth);

    /*
      if uncommented, it conflicts with hammerjs and there are not swipe events on this element
    overflow-x: hidden;
    overflow-y: auto;
    */
  }
}

.bg {
  background: var(--color1);
  position: fixed;
  left: 0;
  top: 0;
  width: 200vw;
  height: 100vh;

  g {
    transition: transform 0.8s;
  }

  ellipse {
    /* required for firefox and safari */
    transform-box: fill-box;
  }

  ellipse:nth-child(odd) {
    transform-origin: 51% 49%;
    animation: rotating 8s linear infinite;

    @media (min-width: 500px) {
      animation-duration: 10s;
    }

    @media (min-width: 1000px) {
      animation-duration: 13s;
    }
  }

  ellipse:nth-child(even) {
    transform-origin: 51% 49%;
    animation: rotating 6s linear infinite reverse;

    @media (min-width: 500px) {
      animation-duration: 8s;
    }

    @media (min-width: 1000px) {
      animation-duration: 11s;
    }
  }

  ellipse:nth-of-type(3n) {
    transform-origin: 52% 48%;
    animation: rotating 7s linear infinite;

    @media (min-width: 500px) {
      animation-duration: 9s;
    }

    @media (min-width: 1000px) {
      animation-duration: 12s;
    }
  }

  g:nth-of-type(1) ellipse:nth-of-type(1) {
    transform-origin: 51% 48%;
    animation: rotating 5s linear infinite reverse;

    @media (min-width: 500px) {
      animation-duration: 7s;
    }

    @media (min-width: 1000px) {
      animation-duration: 10s;
    }
  }
}

@keyframes rotating {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
